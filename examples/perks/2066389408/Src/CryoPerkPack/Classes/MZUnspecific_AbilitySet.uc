class MZUnspecific_AbilitySet extends X2Ability config(MZCryoPerkPack);

var config int PiercingCold_BonusPierce, BrittleIce_BonusShred, ColdShoulder_ChillFlatDR, ColdShoulder_BChillFlatDR, FortyBelow_Bonus, FortyBelow_PerTier;
var config float ColdShoulder_ChillPercentDR, ColdShoulder_BChillPercentDR;

static function array<X2DataTemplate> CreateTemplates()
{
	local array<X2DataTemplate> Templates;

	Templates.AddItem(FortyBelow());
	Templates.AddItem(PiercingCold());
	Templates.AddItem(BrittleIce());
	Templates.AddItem(ColdShoulder());

	return Templates;
}

static function X2AbilityTemplate FortyBelow()
{
	local X2AbilityTemplate				Template;
	local MZ_Effect_FortyBelow			RegenEffect;

	`CREATE_X2ABILITY_TEMPLATE(Template, 'MZFortyBelow');

	Template.eAbilityIconBehaviorHUD = eAbilityIconBehavior_NeverShow;
	Template.Hostility = eHostility_Neutral;

//BEGIN AUTOGENERATED CODE: Template Overrides 'Deflect'
	Template.IconImage = "img:///UILibrary_MPP.icestar";
	Template.AbilitySourceName = 'eAbilitySource_Perk';
	Template.bDisplayInUITacticalText = false;
//END AUTOGENERATED CODE: Template Overrides 'Deflect'

	Template.AbilityToHitCalc = default.DeadEye;
	Template.AbilityTargetStyle = default.SelfTarget;
	Template.AbilityTriggers.AddItem(default.UnitPostBeginPlayTrigger);

	RegenEffect = new class'MZ_Effect_FortyBelow';
	RegenEffect.BuildPersistentEffect(1, true, false, false);
	RegenEffect.SetDisplayInfo(ePerkBuff_Passive, Template.LocFriendlyName, Template.GetMyLongDescription(), Template.IconImage, true, , Template.AbilitySourceName);
	RegenEffect.FlatBonus = default.FortyBelow_Bonus;
	RegenEffect.PerTierBonus = default.FortyBelow_PerTier;
	Template.AddTargetEffect(RegenEffect);

	Template.BuildNewGameStateFn = TypicalAbility_BuildGameState;
	Template.BuildVisualizationFn = none;
	Template.bUniqueSource = true;
	
	return Template;
}

static function X2AbilityTemplate PiercingCold()
{
	local X2AbilityTemplate				Template;
	local MZ_Effect_PiercingCold			RegenEffect;

	`CREATE_X2ABILITY_TEMPLATE(Template, 'MZPiercingCold');

	Template.eAbilityIconBehaviorHUD = eAbilityIconBehavior_NeverShow;
	Template.Hostility = eHostility_Neutral;

//BEGIN AUTOGENERATED CODE: Template Overrides 'Deflect'
	Template.IconImage = "img:///UILibrary_MPP.icespear";
	Template.AbilitySourceName = 'eAbilitySource_Perk';
	Template.bDisplayInUITacticalText = false;
//END AUTOGENERATED CODE: Template Overrides 'Deflect'

	Template.AbilityToHitCalc = default.DeadEye;
	Template.AbilityTargetStyle = default.SelfTarget;
	Template.AbilityTriggers.AddItem(default.UnitPostBeginPlayTrigger);

	RegenEffect = new class'MZ_Effect_PiercingCold';
	RegenEffect.BuildPersistentEffect(1, true, false, false);
	RegenEffect.SetDisplayInfo(ePerkBuff_Passive, Template.LocFriendlyName, Template.GetMyLongDescription(), Template.IconImage, true, , Template.AbilitySourceName);
	RegenEffect.Pierce = true;
	RegenEffect.Shred = false;
	RegenEffect.BonusAP = default.PiercingCold_BonusPierce;
	Template.AddTargetEffect(RegenEffect);

	Template.BuildNewGameStateFn = TypicalAbility_BuildGameState;
	Template.BuildVisualizationFn = none;
	Template.bUniqueSource = true;
	
	return Template;
}

static function X2AbilityTemplate BrittleIce()
{
	local X2AbilityTemplate				Template;
	local MZ_Effect_PiercingCold		RegenEffect;

	`CREATE_X2ABILITY_TEMPLATE(Template, 'MZBrittleIce');

	Template.eAbilityIconBehaviorHUD = eAbilityIconBehavior_NeverShow;
	Template.Hostility = eHostility_Neutral;

//BEGIN AUTOGENERATED CODE: Template Overrides 'Deflect'
	Template.IconImage = "img:///UILibrary_MPP.Shatter";
	Template.AbilitySourceName = 'eAbilitySource_Perk';
	Template.bDisplayInUITacticalText = false;
//END AUTOGENERATED CODE: Template Overrides 'Deflect'

	Template.AbilityToHitCalc = default.DeadEye;
	Template.AbilityTargetStyle = default.SelfTarget;
	Template.AbilityTriggers.AddItem(default.UnitPostBeginPlayTrigger);

	RegenEffect = new class'MZ_Effect_PiercingCold';
	RegenEffect.BuildPersistentEffect(1, true, false, false);
	RegenEffect.SetDisplayInfo(ePerkBuff_Passive, Template.LocFriendlyName, Template.GetMyLongDescription(), Template.IconImage, true, , Template.AbilitySourceName);
	RegenEffect.Pierce = false;
	RegenEffect.Shred = true;
	RegenEffect.BonusShred = default.BrittleIce_BonusShred;
	Template.AddTargetEffect(RegenEffect);

	Template.BuildNewGameStateFn = TypicalAbility_BuildGameState;
	Template.BuildVisualizationFn = none;
	Template.bUniqueSource = true;
	
	return Template;
}

static function X2AbilityTemplate ColdShoulder()
{
	local X2AbilityTemplate				Template;
	local MZ_Effect_ColdShoulder		RegenEffect;

	`CREATE_X2ABILITY_TEMPLATE(Template, 'MZColdShoulder');

	Template.eAbilityIconBehaviorHUD = eAbilityIconBehavior_NeverShow;
	Template.Hostility = eHostility_Neutral;

//BEGIN AUTOGENERATED CODE: Template Overrides 'Deflect'
	Template.IconImage = "img:///UILibrary_MPP.iceshield";
	Template.AbilitySourceName = 'eAbilitySource_Perk';
	Template.bDisplayInUITacticalText = false;
//END AUTOGENERATED CODE: Template Overrides 'Deflect'

	Template.AbilityToHitCalc = default.DeadEye;
	Template.AbilityTargetStyle = default.SelfTarget;
	Template.AbilityTriggers.AddItem(default.UnitPostBeginPlayTrigger);

	RegenEffect = new class'MZ_Effect_ColdShoulder';
	RegenEffect.BuildPersistentEffect(1, true, false, false);
	RegenEffect.SetDisplayInfo(ePerkBuff_Passive, Template.LocFriendlyName, Template.GetMyLongDescription(), Template.IconImage, true, , Template.AbilitySourceName);
	RegenEffect.ChillFlatDR = default.ColdShoulder_ChillFlatDR;
	RegenEffect.ChillPercentDR = default.ColdShoulder_ChillPercentDR;
	RegenEffect.BChillFlatDR = default.ColdShoulder_BChillFlatDR;
	RegenEffect.BChillPercentDR = default.ColdShoulder_BChillPercentDR;
	Template.AddTargetEffect(RegenEffect);

	Template.BuildNewGameStateFn = TypicalAbility_BuildGameState;
	Template.BuildVisualizationFn = none;
	Template.bUniqueSource = true;
	
	return Template;
}